// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å Chat.js
// –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

export const fixChatJS = async (testResults) => {
  console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Chat.js...');
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
  const problematicModels = [];
  
  for (const [modelId, results] of Object.entries(testResults)) {
    const hasErrors = Object.values(results).some(r => r && r.status === 'error');
    if (hasErrors) {
      problematicModels.push({
        id: modelId,
        errors: results
      });
    }
  }
  
  console.log('–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–¥–µ–ª–∏:', problematicModels);
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è Chat.js
  const fixes = generateChatFixes(problematicModels);
  
  return fixes;
};

const generateChatFixes = (problematicModels) => {
  const fixes = {
    modelIdMap: {},
    specialHandling: {},
    parameterFixes: {}
  };
  
  for (const model of problematicModels) {
    const { id, errors } = model;
    
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    switch (id) {
      case 'midjourney':
        fixes.modelIdMap[id] = 'midjourney-v6'; // –û–±–Ω–æ–≤–ª—è–µ–º ID
        fixes.specialHandling[id] = {
          removeParameters: ['temperature', 'top_p', 'max_tokens', 'frequency_penalty', 'presence_penalty'],
          useOnly: ['model', 'messages']
        };
        break;
        
      case 'openai/dall-e-3':
        fixes.modelIdMap[id] = 'dall-e-3';
        fixes.specialHandling[id] = {
          endpoint: 'images/generations',
          addParameters: ['size', 'n', 'quality']
        };
        break;
        
      case 'stability/stable-diffusion-xl':
        fixes.modelIdMap[id] = 'stable-diffusion-xl-1024-v1-0';
        fixes.specialHandling[id] = {
          endpoint: 'generation/stable-diffusion-xl-1024-v1-0/text-to-image',
          addParameters: ['width', 'height', 'steps', 'cfg_scale']
        };
        break;
        
      case 'openai/codex':
        fixes.modelIdMap[id] = 'code-davinci-002';
        fixes.parameterFixes[id] = {
          remove: ['frequency_penalty', 'presence_penalty'],
          add: ['stop']
        };
        break;
        
      case 'deepseek/deepseek-coder':
        fixes.modelIdMap[id] = 'deepseek-coder-33b-instruct';
        fixes.parameterFixes[id] = {
          remove: ['frequency_penalty', 'presence_penalty']
        };
        break;
        
      case 'google/palm-2':
        fixes.modelIdMap[id] = 'text-bison-001';
        fixes.parameterFixes[id] = {
          remove: ['frequency_penalty', 'presence_penalty'],
          rename: { 'temperature': 'temperature', 'top_p': 'top_p' }
        };
        break;
        
      case 'google/bard':
        fixes.modelIdMap[id] = 'chat-bison-001';
        fixes.parameterFixes[id] = {
          remove: ['frequency_penalty', 'presence_penalty']
        };
        break;
        
      case 'cohere/command-r-plus':
        fixes.modelIdMap[id] = 'command-r-plus';
        fixes.parameterFixes[id] = {
          remove: ['frequency_penalty', 'presence_penalty']
        };
        break;
        
      default:
        // –û–±—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ–ª–µ–π —Å –æ—à–∏–±–∫–∞–º–∏ 400
        if (Object.values(errors).some(e => e?.message?.includes('400'))) {
          fixes.parameterFixes[id] = {
            remove: ['frequency_penalty', 'presence_penalty'],
            simplify: true
          };
        }
    }
  }
  
  return fixes;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫ Chat.js
export const applyFixesToChatJS = (fixes) => {
  console.log('–ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ Chat.js:', fixes);
  
  // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Chat.js
  // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  
  const instructions = {
    modelIdMapUpdates: fixes.modelIdMap,
    specialHandling: fixes.specialHandling,
    parameterFixes: fixes.parameterFixes,
    nextSteps: [
      '–û–±–Ω–æ–≤–∏—Ç—å modelIdMap —Å –Ω–æ–≤—ã–º–∏ ID',
      '–î–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π',
      '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤',
      '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–æ–≤'
    ]
  };
  
  return instructions;
}; 